// Code generated by MockGen. DO NOT EDIT.
// Source: model.go

// Package mock is a generated GoMock package.
package mock

import (
	api "main/api"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRequestModel is a mock of RequestModel interface.
type MockRequestModel struct {
	ctrl     *gomock.Controller
	recorder *MockRequestModelMockRecorder
}

// MockRequestModelMockRecorder is the mock recorder for MockRequestModel.
type MockRequestModelMockRecorder struct {
	mock *MockRequestModel
}

// NewMockRequestModel creates a new mock instance.
func NewMockRequestModel(ctrl *gomock.Controller) *MockRequestModel {
	mock := &MockRequestModel{ctrl: ctrl}
	mock.recorder = &MockRequestModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestModel) EXPECT() *MockRequestModelMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockRequestModel) Delete(id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockRequestModelMockRecorder) Delete(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockRequestModel)(nil).Delete), id)
}

// Get mocks base method.
func (m *MockRequestModel) Get() (*api.Entity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(*api.Entity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRequestModelMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRequestModel)(nil).Get))
}

// Insert mocks base method.
func (m *MockRequestModel) Insert(endpoint string, body map[string]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", endpoint, body)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockRequestModelMockRecorder) Insert(endpoint, body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockRequestModel)(nil).Insert), endpoint, body)
}
