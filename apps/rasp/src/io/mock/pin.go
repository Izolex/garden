// Code generated by MockGen. DO NOT EDIT.
// Source: pin.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gpio "periph.io/x/conn/v3/gpio"
)

// MockPin is a mock of Pin interface.
type MockPin struct {
	ctrl     *gomock.Controller
	recorder *MockPinMockRecorder
}

// MockPinMockRecorder is the mock recorder for MockPin.
type MockPinMockRecorder struct {
	mock *MockPin
}

// NewMockPin creates a new mock instance.
func NewMockPin(ctrl *gomock.Controller) *MockPin {
	mock := &MockPin{ctrl: ctrl}
	mock.recorder = &MockPinMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPin) EXPECT() *MockPinMockRecorder {
	return m.recorder
}

// Out mocks base method.
func (m *MockPin) Out(l gpio.Level) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Out", l)
	ret0, _ := ret[0].(error)
	return ret0
}

// Out indicates an expected call of Out.
func (mr *MockPinMockRecorder) Out(l interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Out", reflect.TypeOf((*MockPin)(nil).Out), l)
}
